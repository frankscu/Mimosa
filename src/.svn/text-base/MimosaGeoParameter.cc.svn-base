//---------------------------------------------------------------------------//
//      BOOST --- BESIII Object_Oriented Simulation Tool                     //
//---------------------------------------------------------------------------//
//Description: Handle database I/O and user interface 
//             for MDC geometry parameters
//Author: Yuan Ye(yuany@mail.ihep.ac.cn)
//Created: 4 Dec, 2003
//Modified:
//Comment: Used in "Mimosa" now, should be insert in framwork later
//         The units are "mm" and "rad". 
//         Datum plane is the East Endplane of MDC.
//---------------------------------------------------------------------------//

#include <iostream>
#include <fstream>

#include <CLHEP/Units/PhysicalConstants.h>

#include "MimosaGeoParameter.hh"
#include "globals.hh"
#include <cstdlib>

MimosaGeoParameter * MimosaGeoParameter::fPointer=0;

MimosaGeoParameter * MimosaGeoParameter::GetGeo(void){
      if (! fPointer) fPointer = new MimosaGeoParameter();
           return fPointer;
	   }

void MimosaGeoParameter::Initialize(void){
  layerNo=1;
  for(int i=0;i<layerNo;++i){
  //Chip
    fLayer[i].RowNo(576);
    fLayer[i].ColNo(1152);
    fLayer[i].PitchX(18.4);  //*um
    fLayer[i].PitchY(18.4);  //*um
    fLayer[i].SizeX(21.56);   //*mm
    fLayer[i].SizeY(13.78);   //*mm
    fLayer[i].AsicTh(10.);     //*um
    fLayer[i].SenTh(15.);     //*um
    fLayer[i].SubTh(25.);     //*um
    fLayer[i].R(0.);	  
    fLayer[i].Phi(0.);	      
    fLayer[i].LayerName("Test Layer");
    fLayer[i].LadderName("Test Ladder");
  //Ladder
    fLayer[i].ChipNo(1);
  //Layer
    fLayer[i].LadderNo(1);
  }
}

const MimosaLayer& MimosaGeoParameter::Layer(int layerId) const {
  if(layerId<0 || layerId>=layerNo){
  cout<<"MimosaGeoParameter::Error: Wrong layer No"<<endl;
  }
  return fLayer[layerId];
}

void MimosaGeoParameter::Dump(void){
  cout<<""<<endl;
  cout<<"------MimosaGeoParameter info :--------"<<endl;
  cout<<"Layer ID: "<<layerNo<<endl;
  for(int i=0;i<layerNo;++i){
    cout<<"Layer["<<i<<"]: "
	<<" Name: "<<fLayer[i].LayerName()
	<<" Ladder Number: "<<fLayer[i].LadderNo()
	<<" Chip Number: "<<fLayer[i].LayerChipNo()
	<<" Pixel Number: "<<fLayer[i].LayerPixNo()<<endl;
    cout<<""<<endl;
  }
}
